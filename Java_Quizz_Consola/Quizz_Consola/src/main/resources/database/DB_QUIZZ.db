
CREATE TABLE IF NOT EXISTS categorias (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    categoria TEXT NOT NULL,
    descripcion TEXT
);

CREATE TABLE IF NOT EXISTS preguntas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    preguntas_text TEXT NOT NULL,
    categoria_id INTEGER NOT NULL,
    dificultad TEXT CHECK(dificultad IN ('Fácil', 'Intermedio', 'Difícil')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (categoria_id) REFERENCES categorias(id)
);

CREATE TABLE IF NOT EXISTS etiquetas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    etiqueta TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS preguntas_tags (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    pregunta_id INTEGER NOT NULL,
    etiqueta_id INTEGER NOT NULL,
    FOREIGN KEY (pregunta_id) REFERENCES preguntas(id),
    FOREIGN KEY (etiqueta_id) REFERENCES etiquetas(id),
    UNIQUE (pregunta_id, etiqueta_id)
);

CREATE TABLE IF NOT EXISTS opciones (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    pregunta_id INTEGER NOT NULL,
    opcion_text TEXT NOT NULL,
    is_correcta INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (pregunta_id) REFERENCES preguntas(id)
);

CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    rol TEXT CHECK(rol IN ('Admin', 'Profesor', 'Alumno')) DEFAULT 'Alumno',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS test (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    titulo TEXT NOT NULL,
    descripcion TEXT,
    created_by INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES usuarios(id)
);

CREATE TABLE IF NOT EXISTS test_preguntas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    test_id INTEGER NOT NULL,
    pregunta_id INTEGER NOT NULL,
    FOREIGN KEY (test_id) REFERENCES test(id),
    FOREIGN KEY (pregunta_id) REFERENCES preguntas(id),
    UNIQUE (test_id, pregunta_id)
);

CREATE TABLE IF NOT EXISTS test_resultados (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario_id INTEGER NOT NULL,
    test_id INTEGER NOT NULL,
    puntuacion REAL NOT NULL DEFAULT 0,
    inicio DATETIME NOT NULL,
    fin DATETIME,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (test_id) REFERENCES test(id)
);

CREATE TABLE IF NOT EXISTS usuario_respuesta (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario_id INTEGER NOT NULL,
    test_id INTEGER NOT NULL,
    pregunta_id INTEGER NOT NULL,
    seleccionada_opcion_id INTEGER,
    tiempo_respuesta TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (test_id) REFERENCES test(id),
    FOREIGN KEY (pregunta_id) REFERENCES preguntas(id),
    FOREIGN KEY (seleccionada_opcion_id) REFERENCES opciones(id)
);